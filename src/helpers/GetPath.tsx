import {decode} from '@mapbox/polyline';

const getPath = async (startLoc, destinationLoc) => {
  try {
    // commit
    // const KEY = 'AIzaSyD8fu56mkbAPAkIP0wNLMgyeAFrFDti6EQ';

    // let resp = await fetch(
    //   `https://maps.googleapis.com/maps/api/directions/json?origin=${startLoc}&destination=${destinationLoc}&waypoints=optimize:true|38.319451,26.643055|38.318687,26.643808|38.31642,26.64086|38.31608,26.63815|38.32035,26.63911|38.32387,26.63763|38.32522,26.63289|38.32382,26.63237&key=${KEY}`,
    // );
    // let respJson = await resp.json();

    // let points = decode(respJson.routes[0].overview_polyline.points);
    // console.log('LOG: RES:', points);

    const points = [
      [38.31836, 26.64359],
      [38.31758, 26.64268],
      [38.3172, 26.6422],
      [38.3169, 26.64175],
      [38.31673, 26.64145],
      [38.31692, 26.64142],
      [38.31705, 26.64143],
      [38.31762, 26.64154],
      [38.31806, 26.64163],
      [38.31868, 26.64176],
      [38.31896, 26.64183],
      [38.31976, 26.642],
      [38.31975, 26.64213],
      [38.31966, 26.64302],
      [38.31964, 26.64305],
      [38.31958, 26.64307],
      [38.31945, 26.64306],
      [38.31943, 26.64324],
      [38.31943, 26.64338],
      [38.31947, 26.64347],
      [38.31977, 26.6436],
      [38.32014, 26.64373],
      [38.32018, 26.64379],
      [38.32019, 26.64387],
      [38.32015, 26.64416],
      [38.31909, 26.64391],
      [38.31852, 26.64376],
      [38.31758, 26.64268],
      [38.3172, 26.6422],
      [38.3169, 26.64175],
      [38.31643, 26.64085],
      [38.316, 26.63996],
      [38.31531, 26.63855],
      [38.31503, 26.63797],
      [38.31508, 26.63792],
      [38.31568, 26.63803],
      [38.31609, 26.63812],
      [38.31872, 26.63874],
      [38.32189, 26.63947],
      [38.32298, 26.63972],
      [38.32359, 26.63986],
      [38.32383, 26.63988],
      [38.32369, 26.63876],
      [38.32369, 26.63842],
      [38.32373, 26.63814],
      [38.32378, 26.63792],
      [38.32409, 26.63695],
      [38.32456, 26.63556],
      [38.32483, 26.63473],
      [38.32495, 26.63429],
      [38.32507, 26.63362],
      [38.32516, 26.63306],
      [38.32525, 26.63284],
      [38.32527, 26.63278],
      [38.32525, 26.63266],
      [38.32522, 26.63262],
      [38.32517, 26.6326],
      [38.32512, 26.63261],
      [38.32508, 26.63264],
      [38.32506, 26.63266],
      [38.32505, 26.63268],
      [38.32398, 26.63243],
      [38.32366, 26.63235],
      [38.32198, 26.63197],
      [38.32196, 26.6319],
      [38.322, 26.63158],
      [38.32206, 26.63135],
      [38.32214, 26.63117],
      [38.32222, 26.63103],
      [38.32228, 26.63096],
      [38.3224, 26.63085],
      [38.32251, 26.63078],
      [38.32266, 26.63072],
      [38.32276, 26.63072],
      [38.3231, 26.63077],
      [38.3237, 26.6309],
      [38.32421, 26.63101],
    ];

    let coords = points.map((point, index) => {
      return {
        latitude: point[0],
        longitude: point[1],
      };
    });
    return coords;
  } catch (error) {
    return error;
  }
};

export default getPath;
